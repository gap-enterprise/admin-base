/*
 * This file is generated by jOOQ.
 */
package io.surati.gap.admin.base.db.jooq.generated;


import io.surati.gap.admin.base.db.jooq.generated.tables.AdAccessProfile;
import io.surati.gap.admin.base.db.jooq.generated.tables.AdEventLog;
import io.surati.gap.admin.base.db.jooq.generated.tables.AdPerson;
import io.surati.gap.admin.base.db.jooq.generated.tables.AdProfile;
import io.surati.gap.admin.base.db.jooq.generated.tables.AdUser;
import io.surati.gap.admin.base.db.jooq.generated.tables.records.AdAccessProfileRecord;
import io.surati.gap.admin.base.db.jooq.generated.tables.records.AdEventLogRecord;
import io.surati.gap.admin.base.db.jooq.generated.tables.records.AdPersonRecord;
import io.surati.gap.admin.base.db.jooq.generated.tables.records.AdProfileRecord;
import io.surati.gap.admin.base.db.jooq.generated.tables.records.AdUserRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in 
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AdAccessProfileRecord> AD_ACCESS_PROFILE_PKEY = Internal.createUniqueKey(AdAccessProfile.AD_ACCESS_PROFILE, DSL.name("ad_access_profile_pkey"), new TableField[] { AdAccessProfile.AD_ACCESS_PROFILE.ACCESS_ID, AdAccessProfile.AD_ACCESS_PROFILE.PROFILE_ID }, true);
    public static final UniqueKey<AdEventLogRecord> AD_EVENT_LOG_PKEY = Internal.createUniqueKey(AdEventLog.AD_EVENT_LOG, DSL.name("ad_event_log_pkey"), new TableField[] { AdEventLog.AD_EVENT_LOG.ID }, true);
    public static final UniqueKey<AdPersonRecord> AD_PERSON_PKEY = Internal.createUniqueKey(AdPerson.AD_PERSON, DSL.name("ad_person_pkey"), new TableField[] { AdPerson.AD_PERSON.ID }, true);
    public static final UniqueKey<AdProfileRecord> AD_PROFILE_PKEY = Internal.createUniqueKey(AdProfile.AD_PROFILE, DSL.name("ad_profile_pkey"), new TableField[] { AdProfile.AD_PROFILE.ID }, true);
    public static final UniqueKey<AdUserRecord> AD_USER_LOGIN_KEY = Internal.createUniqueKey(AdUser.AD_USER, DSL.name("ad_user_login_key"), new TableField[] { AdUser.AD_USER.LOGIN }, true);
    public static final UniqueKey<AdUserRecord> AD_USER_PKEY = Internal.createUniqueKey(AdUser.AD_USER, DSL.name("ad_user_pkey"), new TableField[] { AdUser.AD_USER.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AdAccessProfileRecord, AdProfileRecord> AD_ACCESS_PROFILE__AD_ACCESS_PROFILE_PROFILE_ID_FKEY = Internal.createForeignKey(AdAccessProfile.AD_ACCESS_PROFILE, DSL.name("ad_access_profile_profile_id_fkey"), new TableField[] { AdAccessProfile.AD_ACCESS_PROFILE.PROFILE_ID }, Keys.AD_PROFILE_PKEY, new TableField[] { AdProfile.AD_PROFILE.ID }, true);
    public static final ForeignKey<AdUserRecord, AdPersonRecord> AD_USER__AD_USER_ID_FKEY = Internal.createForeignKey(AdUser.AD_USER, DSL.name("ad_user_id_fkey"), new TableField[] { AdUser.AD_USER.ID }, Keys.AD_PERSON_PKEY, new TableField[] { AdPerson.AD_PERSON.ID }, true);
    public static final ForeignKey<AdUserRecord, AdProfileRecord> AD_USER__AD_USER_PROFILE_ID_FKEY = Internal.createForeignKey(AdUser.AD_USER, DSL.name("ad_user_profile_id_fkey"), new TableField[] { AdUser.AD_USER.PROFILE_ID }, Keys.AD_PROFILE_PKEY, new TableField[] { AdProfile.AD_PROFILE.ID }, true);
}
